[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[sub_resource type="Shader" id=30]
code = "shader_type canvas_item;

uniform sampler2D noise0;
uniform sampler2D noise1;
uniform float time_offset;
uniform float speed : hint_range(0.0, 1.0, 0.001) = 0.5;
uniform vec4 top_color: hint_color = vec4(0.11, 0.07, 0.17, 1.0);
uniform vec4 bottom_color: hint_color = vec4(1.0, 0.27, 0.51, 1.0);

void fragment() {
	float noise = texture(noise0, UV + vec2(0.0, TIME * 0.35 * speed + time_offset)).r * 0.5 + texture(noise1, UV + vec2(TIME * 0.25 * speed + time_offset, 0.0)).r * 0.5;
	COLOR = mix(bottom_color, top_color, noise - UV.y * UV.y);
	float n = noise * 1.5 * texture(TEXTURE, UV).a;
	COLOR.a = mix(0.0, 1.0, (n - 0.4) * 10.0);
	if (n < 0.4 || n > 0.5) {
		COLOR.a = round(n);
	}
}"

[sub_resource type="OpenSimplexNoise" id=28]
seed = 1476
octaves = 2
period = 170.5
persistence = 0.855
lacunarity = 3.51

[sub_resource type="NoiseTexture" id=29]
height = 256
seamless = true
noise = SubResource( 28 )

[sub_resource type="OpenSimplexNoise" id=6]
seed = 538
octaves = 2
period = 101.9

[sub_resource type="NoiseTexture" id=7]
height = 256
seamless = true
noise = SubResource( 6 )

[resource]
shader = SubResource( 30 )
shader_param/time_offset = null
shader_param/speed = 0.1
shader_param/top_color = Color( 1, 0.270588, 0.509804, 1 )
shader_param/bottom_color = Color( 1, 0.27, 0.51, 1 )
shader_param/noise0 = SubResource( 29 )
shader_param/noise1 = SubResource( 7 )
